var frisby = require('frisby');
var url = 'http://localhost:9000/';
var pm_key = process.env['pm_key'];
var projectId = "";
var translatorId = "";


frisby.create('Create project')
  	.post(url + 
  	'api/v1/productivityProject?name=testProj&quality_level=1&process=2&source_language=fr-FR&contentType=2&industry=1') 
  	.addHeader('DQF_PMANAGER_KEY', pm_key)
  	.expectStatus(200)
  	.expectHeaderContains('content-type', 'application/json')
  	.expectJSON({
      	type: 'ok',
    	message: 'The project has been successfully created!',
    	code: 200
   	})
   	.after(function(body,res) {
    	projectId = res.headers['project_id'];
	    frisby.create('Get project')
	  		.get(url + 'api/v1/productivityProject/' + projectId)
	    	.addHeader('DQF_PMANAGER_KEY', pm_key)
	    	.expectStatus(200)
	     	.expectJSONTypes({
	    		process: Number,
	    		projectName: String,
	    		sourceLanguage: String,
	    		contentType: Number,
	    		postEditingQuality: Number,
	    		industry: Number
	  		})
	  		.after(function(body,res) {
	    		frisby.create('Add translator')
  				.post(url + 'api/v1/translator?name=luis1&email=test'+ Math.random().toString(36).substring(7) + '@taus.net')
    			.expectStatus(200)
    			.expectHeaderContains('content-type', 'application/json')
    			.expectJSON({
      			type: 'ok',
    				message: 'The translator was succefully added to the database',
    				code: 200
    			})
				.toss()	
			})
		.toss()
  	})
  .toss()


frisby.create('Get the industry list')
	.get(url + 'api/v1/industry/')
  	.expectStatus(200)
  	.expectHeaderContains('content-type', 'application/json')
    .expectJSONTypes('*', {
    	id: Number,
    	displayName: String,
    	name: String,
    	archive: Number
	})
    .expectBodyContains('Automotive')
	.toss()
	
	
frisby.create('Get MT engine list')
  .get(url + 'api/v1/mtengines/')
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSONTypes('*', {
    	id: Number,
    	name: String,
    	archive: Number
  	})
    .expectBodyContains('Apertium')
	.toss()
	
	
frisby.create('Get Content Type list')
  .get(url + 'api/v1/contenttype/')
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSONTypes('*', {
    	id: Number,
    	name: String,
    	archive: Number
  	})
    .expectBodyContains('User Documentation')
	.toss()	
	
frisby.create('Get CAT Tools list')
  .get(url + 'api/v1/cattools/')
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSONTypes('*', {
    	id: Number,
    	name: String,
    	archive: Number
  	})
    .expectBodyContains('<none>')
	.toss()	
	
frisby.create('Get Quality levels on post editing')
  .get(url + 'api/v1/qualitylevel/')
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSONTypes('*', {
    	id: Number,
    	name: String,
    	displayName: String
  	})
    .expectBodyContains('Good Enough')
	.toss()	
	
	
frisby.create('Get Project sub types')
  .get(url + 'api/v1/qualitylevel/')
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSONTypes('*', {
    	id: Number,
    	name: String,
    	displayName: String
  	})
    .expectBodyContains('Good Enough')
	.toss()	


	
frisby.create('Add translator with no params')
  .post(url + 'api/v1/translator')
    .expectStatus(500)
	.toss()
	
frisby.create('Add translator with empty params')
  .post(url + 'api/v1/translator?name=&email=')
    .expectStatus(400)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSON({
      	type: 'bad request',
    	message: 'Name and Email are required',
    	code:400
    })
	.toss()


/*
	
frisby.create('Get translators of project managers')
  .get(url + 'api/v1/translator/2', 
  { headers: 
  	{ 'DQF_PMANAGER_KEY': 't9lqge1c8u78lpcet2922hg9np33i2pq2a3c59quguk45jafrl87',
    'DQF_PROJECT_KEY': 'jd03b8eb7ga1q9stl599o9ne3863ntih8uatp0ah4ac0t2m1arrl'
   	}
  })
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectBodyContains('luis')
	.toss()
	
frisby.create('Get projects of project manager')
  .get(url + 'api/v1/productivityProject/2', 
  { headers: 
  	{ 'DQF_PMANAGER_KEY': 't9lqge1c8u78lpcet2922hg9np33i2pq2a3c59quguk45jafrl87' }
  })
    .expectStatus(200)
    .expectHeaderContains('content-type', 'application/json')
    .expectJSON({
    	process: 2,
  		projectName: 'ghhg',
  		sourceLanguage: 'en-US',
  		contentType: 5,
  		postEditingQuality: 1,
  		industry: 3
    })
	.toss()	

*/