swagger: '2.0'
info:
  description: |
    This is the TAUS DQF API server.
  version: '3.0'
  title: TAUS DQF API
  termsOfService: 'https://www.taus.net/taus-terms-of-use'
  contact:
    name: dqf@taus.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: dqf-api.taus.net
basePath: /v3
schemes:
  - https
produces:
  - application/json
paths:
  /login:
    post:
      tags:
        - User
      summary: Login to the DQF APIv3 service
      description: 'Use the Login method to retrieve the session_id to be used through the API.'
      operationId: login
      produces:
        - application/json
      parameters:
        - in: formData
          name: email
          description: 'The email of the user encrypted with AES/CBC/PKCS5PADDING and Base64 endoding. Contact us for the encrytion key and initialization vector.'
          required: true
          type: string
          format: email
        - in: formData
          name: password
          description: 'The user password encrypted with AES/CBC/PKCS5PADDING and Base64 endoding. Contact us for the encrytion key and initialization vector.'
          required: true
          type: string          
      responses:
        '200':
          description: 'Successful operation - Returns the session_id'
        '400':
          description: 'Bad request' 
        '404':
          description: 'Not found'
        '408':
          description: 'Time out'           
        '500':
          description: 'Internal Server Error'
      security:
        - API_KEY: []
  /project/master:
    post:
      tags:
        - Project
      summary: Add a new master project to DQF
      description: 'Create master projects in DQF'
      operationId: addProject
      consumes:
        - application/x-www-form-urlencoded      
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string
        - name: name
          in: formData
          description: 'The name of the project'
          required: true
          type: string
        - name: qualityLevel
          in: formData
          description: 'The id of the quality level of the translation. Use the GET(/qualityLevel/) to get a list of the quality levels from the database.'
          required: true
          type: integer
        - name: process
          in: formData
          description: 'The id of the process used for the translation. Use the GET(/process/) to get a list of processes from the database. For example, Human, MT+PE, TM+Human, MT+PE+Human, MT+PE+TM+Human.'
          required: true
          type: integer
        - name: sourceLanguage
          in: formData
          description: "Source language of the project.  Use of (two letter language id)-(two letter country identifier) combination. Validity of the id's (ISO 639-1 and ISO 3166 two-letter identifiers). Example (bg-BG, fr-FR, fr-CA, pt-BR)."
          required: true
          type: string
        - name: contentType
          in: formData
          description: 'The id of the content type of the domain of the document/text. Use the GET(/contentType/) to get a list of content types from the database.'
          required: true
          type: integer
        - name: industry
          in: formData
          description: 'The id of the domain of the document/text. Use the GET(/industry/) to get a list of industries from the database.'
          required: true
          type: integer
        - name: catToolProjectIdentifier
          in: formData
          description: "The CAT tool can submit his own project identifier to map the DQF project identifiers. The CAT tool identrifier can be later used to retrieve project information"
          required: false
          type: string          
      responses:
        '200':
          description: 'Successful operation. Returns the projectId and the projectKey of the master project.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/child:
    post:
      tags:
        - Project
      summary: Add a new subproject to DQF
      description: 'Create subprojects in DQF'
      operationId: addSubProject
      consumes:
        - application/x-www-form-urlencoded      
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string
        - name: projectKey
          in: header
          description: 'The key of a master project. Providing a master projectKey will create jobs to the main project.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'ID of the master project a child project needs to be created. A catToolProjectIdentifier can be used instead.'
          required: true
          type: integer
          format: int64          
        - name: name
          in: formData
          description: 'The name of the project. If not submitted, it will be inherited by the master project.'
          required: false
          type: string
        - name: qualityLevel
          in: formData
          description: 'The id of the quality level of the translation. Use the GET(/qualityLevel/) to get a list of the quality levels from the database. If not submitted, it will be inherited by the master project.'
          required: false
          type: integer
        - name: process
          in: formData
          description: 'The id of the process used for the translation. Use the GET(/process/) to get a list of processes from the database. For example, Human, MT+PE, TM+Human, MT+PE+Human, MT+PE+TM+Human. If not submitted, it will be inherited by the master project.'
          required: false
          type: integer
        - name: catToolProjectIdentifier
          in: formData
          description: "The CAT tool can submit his own project identifier to map the DQF project identifier. The CAT tool identrifier can be later used to retrieve the project information"
          required: false
          type: string
      responses:
        '200':
          description: 'Successful operation. Returns the projectId and the projectKey of the child project.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/properties:
    put:
      tags:
        - Project
        - Properties
      summary: Update the properties of a master project.
      description: 'Update the properties of an initialized master project by specifying its id. Only the owner of the master project will be able to update the properties'
      operationId: updProjectProperties
      consumes:
        - application/x-www-form-urlencoded      
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The master project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of master project the properties need to be updated. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: sourceLanguage
          in: formData
          description: "Source language of the project.  Use of (two letter language id)-(two letter country identifier) combination. Validity of the id's (ISO 639-1 and ISO 3166 two-letter identifiers). Example (bg-BG, fr-FR, fr-CA, pt-BR)."
          required: false
          type: string
        - name: contentType
          in: formData
          description: 'The id of the content type of the domain of the document/text. Use the GET(/contentType/) to get a list of content types from the database.'
          required: false
          type: integer
        - name: industry
          in: formData
          description: 'The id of the domain of the document/text. Use the GET(/industry/) to get a list of industries from the database.'
          required: false
          type: integer
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
    get:
      tags:
        - Project
        - Properties
      summary: Find the properties of a Project
      description: 'Get the properties of a project by specifying its project id.'
      operationId: getProjectProperties
      consumes:
        - application/x-www-form-urlencoded       
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The master or child project key.'
          required: true
          type: string      
        - name: projectId
          in: path
          description: 'ID of project that needs to be fetched. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}:
    get:
      tags:
        - Project
      summary: Find the project details
      description: 'Users can read the project details by specifying its id.'
      operationId: findProjectById
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The master or child project key.'
          required: true
          type: string       
        - name: projectId
          in: path
          description: 'ID of project that needs to be fetched. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job:
    post:
      tags:
        - Project
        - Job
      summary: Add a job to a project.
      description: 'Adding a job to an initialized project by specifying its id, the target language and the file.'
      operationId: addProjectJob
      consumes:
        - application/x-www-form-urlencoded       
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The master or child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of master or child project a job has to be added. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: targetLanguage
          in: formData
          description: "The target language of the job. Use of (two letter language id)-(two letter country identifier) combination. Validity of the id's (ISO 639-1 and ISO 3166 two-letter identifiers). Example (bg-BG, fr-FR, fr-CA, pt-BR)."
          required: true
          type: string
        - name: fileName
          in: formData
          description: 'The name of the file that needs to be translated into the target language.'
          required: true
          type: string
        - name: segmentSize
          in: formData
          description: 'The number of the segments in the file.'
          required: true
          type: integer
        - name: catToolFileIdentifier
          in: formData
          description: "The CAT tool can submit his own file identifier to map the DQF file identifier. The CAT tool identrifier can be later used to retrieve the file information."
          required: false
          type: string          
      responses:
        '200':
          description: 'Successful operation. Returns the jobId.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
    get:
      tags:
        - Project
        - Job
      summary: Find the jobs of a Project
      description: 'Get the jobs of a project by specifying the projectId. The target languages and files of the job will be retrieved.'
      operationId: findProjectJobs
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The master or child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of master or child project the jobs have to be retrieved. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}:
    get:
      tags:
        - Project
        - Job
      summary: Find the details of a job
      description: 'Get the target languages and file of a job by specifying its id.'
      operationId: findProjectJobDetails
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The master or child project key.'
          required: true
          type: string      
        - name: projectId
          in: path
          description: 'The id of master or child project the job has to be retrieved. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job that has to be retrieved. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer          
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}/segment:
    post:
      tags:
        - Project
        - Job
        - Segment
      summary: Add a complete translation of a segment.
      description: 'Add the source, target and edited segment of a translation. Using this method to submit a complete segment prohibits the use of the source, target and edited segment separate submission.'
      operationId: addCompleteTranslation
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of the child project the segment has to be submitted. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job the segment has to be submitted. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer
        - name: sourceSegment
          in: formData
          description: 'The source segment content.'
          required: true
          type: string
        - name: targetSegment
          in: formData
          description: 'The MT output or TM match or empty segment.'
          required: true
          type: string
        - name: editedSegment
          in: formData
          description: 'Post-editing or translation from scratch.'
          required: true
          type: string
        - name: time
          in: formData
          description: 'The translation time in milliseconds. Add 0(zero) if no time available.'
          required: true
          type: integer
          format: int64
        - name: segmentOrigin
          in: formData
          description: 'The origin of the segment.'
          required: true
          type: string
          enum: 
          - mt
          - tm
          - termbase
          - other
          - none          
        - name: matchRate
          in: formData
          description: 'The TM match (percentage).'
          required: false
          type: integer
          minimum: 0
          maximum: 100
        - name: mtEngine
          in: formData
          description: 'The id of the MT Engine used for the translation of the segment. Use the GET(/mtEngine/) to get a list of MT Engines from the database.'
          required: true
          type: integer
        - name: mtEngineVersion
          in: formData
          description: 'The version of the MT engine. (if applicable)'
          required: false
          type: string
        - name: segmentOriginDetail
          in: formData
          description: 'A string describing details of the segment origin, for example a translation memory name.'
          required: false
          type: string
        - name: catToolSegmentIdentifier
          in: formData
          description: "The CAT tool can submit his own segment identifier to map the DQF segment identifier. The CAT tool identrifier can be later used to retrieve the segment information."
          required: false
          type: string          
      responses:
        '200':
          description: 'Successful operation. Returns the segmentId.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}/segment/sourceSegment:
    post:
      tags:
        - Project
        - Job
        - Segment
      summary: Add source segments on a file for a job of a project.
      description: 'Add the source segments of a file for translation. Adding the source segments at this point will require the translation to be submitted on a second step using the POST(/project/{projectId}/job/{jobId}/segment/sourceSegment/{segmentId}/translation) method.'
      operationId: addJobSourceSegment
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of the child project the segment has to be submitted. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job the source segment has to be submitted. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer          
        - name: sourceSegment
          in: formData
          description: 'The source segment content.'
          required: true
          type: string
        - name: catToolSegmentIdentifier
          in: formData
          description: "The CAT tool can submit his own segment identifier to map the DQF segment identifier. The CAT tool identrifier can be later used to retrieve the segment information."
          required: false
          type: string          
      responses:
        '200':
          description: 'Successful operation. Returns the segmentId.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}/segment/sourceSegment/{segmentId}/translation:
    post:
      tags:
        - Project
        - Job
        - Segment
      summary: Add the translation of a source segment.
      description: 'Add the translation of a source segment that has already been submitted at an earlier step using the POST(/project/{projectId}/file/{jobId}/segment/sourceSegment) method.'
      operationId: addSourceTranslation
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of the child project the translation of the segment has to be submitted. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job the translation of the source segment has to be submitted. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer
        - name: segmentId
          in: path
          description: 'The segment id the translation needs to be applied. The catToolSegmentIdentifier can be passed instead.'
          required: true
          type: string
        - name: targetSegment
          in: formData
          description: 'The MT output or TM match or empty segment.'
          required: false
          type: string
        - name: editedSegment
          in: formData
          description: 'Post-editing or translation from scratch.'
          required: false
          type: string
        - name: segmentOrigin
          in: formData
          description: 'The origin of the segment.'
          required: false
          type: string
          enum: 
          - mt
          - tm
          - termbase
          - other
          - none          
        - name: time
          in: formData
          description: 'The translation time in milliseconds. Add 0(zero) if no time available.'
          required: true
          type: integer
          format: int64
        - name: matchRate
          in: formData
          description: 'The TM match (percentage).'
          required: false
          type: integer
          minimum: 0
          maximum: 100
        - name: mtEngine
          in: formData
          description: 'The id of the MT Engine used for the translation of the segment. Use the GET(/mtEngine/) to get a list of MT Engines from the database.'
          required: true
          type: integer
        - name: mtEngineVersion
          in: formData
          description: 'The version of the MT engine.'
          required: false
          type: string
        - name: segmentOriginDetail
          in: formData
          description: 'A string describing details of the segment origin, for example a translation memory name.'
          required: false
          type: string
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}/segment/{segmentId}:
    put:
      tags:
        - Project
        - Job
        - Segment
      summary: Update a complete translated segment
      description: 'An already submitted translated segment can be updated. The time will be added to the segment already submitted.'
      operationId: updateTranslatedSegment
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of the child project the update of the segment has to be submitted. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job the update of the segment has to be submitted. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer
        - name: segmentId
          in: path
          description: 'The segment id the update needs to be applied. The catToolSegmentIdentifier can be passed instead.'
          required: true
          type: string
        - name: sourceSegment
          in: formData
          description: 'The source segment content.'
          required: false
          type: string
        - name: targetSegment
          in: formData
          description: 'The MT output or TM match or empty segment.'
          required: false
          type: string
        - name: editedSegment
          in: formData
          description: 'Post-editing or translation from scratch.'
          required: false
          type: string
        - name: time
          in: formData
          description: 'The translation time in milliseconds. Add 0(zero) if no time available.'
          required: true
          type: integer
          format: int64
        - name: segmentOrigin
          in: formData
          description: 'The origin of the segment.'
          required: false
          type: string
          enum: 
          - mt
          - tm
          - termbase
          - other
          - none          
        - name: matchRate
          in: formData
          description: 'The TM match (percentage).'
          required: false
          type: integer
          minimum: 0
          maximum: 100
        - name: mtEngine
          in: formData
          description: 'The id of the new MT Engine used for the translation of the segment. Use the GET(/mtEngine/) to get a list of MT Engines from the database.'
          required: true
          type: integer
        - name: mtEngineVersion
          in: formData
          description: 'The version of the updated MT engine.'
          required: false
          type: string
        - name: segmentOriginDetail
          in: formData
          description: 'A string describing details of the segment origin, for example a translation memory name.'
          required: false
          type: string
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}/segment/{segmentId}/review:
    post:
      tags:
        - Project
        - Job
        - Error Review
      summary: Review. Mark an error in the translatio
      description: 'Mark an error in an existing segment. Can be used to submit error description and/or proofread corrected target text.'
      operationId: addErrorReview
      produces:
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of the child project the review of the segment has to be submitted. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job the review of the segment has to be submitted. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer
        - name: segmentId
          in: path
          description: 'The segment id the review needs to be applied. The catToolSegmentIdentifier can be passed instead.'
          required: true
          type: string
        - name: errorLevelId
          in: formData
          description: 'Id of the error type.'
          required: false
          type: integer
          format: int64
        - name: severity
          in: formData
          description: 'The severity of the error.'
          required: false
          type: string
          enum: 
          - critical
          - major
          - minor
          - neutral
        - name: kudos
          in: formData
          description: 'Indicates whether reviewed segment earned kudos.'
          type: boolean
          default: false
        - name: comment
          in: formData
          description: 'Written comment on the reviewed error.'
          required: false
          type: string 
        - name: time
          in: formData
          description: 'The review time in milliseconds.'
          required: false
          type: integer
          format: int64
        - name: characterPosStart
          in: formData
          description: 'Character position where the error substring starts.'
          required: false
          type: integer
          format: int64
        - name: characterPosEnd
          in: formData
          description: 'Character position where the error substring ends.'
          required: false
          type: integer
          format: int64
        - name: editedText
          in: formData
          description: 'Segment target text edited during error review.'
          required: false
          type: string 
      responses:
        '200':
          description: 'Successful operation. The reviewId will be returned.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /project/{projectId}/job/{jobId}/segment/{segmentId}/review/{reviewId}:
    put:
      tags:
        - Job
        - Segment
        - Error Review
      summary: Update error review for a segment
      description: 'Used to update error review for existing segment. Can be used to update error submission and/or update corrections made to the target text.'
      operationId: updateErrorReview
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'The id of the child project the update of the review has to be submitted. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
        - name: jobId
          in: path
          description: 'The id of the job the update of the review has to be submitted. The catToolFileIdentifier can be passed instead.'
          required: true
          type: integer
        - name: segmentId
          in: path
          description: 'The segment id the update needs of the review has to be applied. The catToolSegmentIdentifier can be passed instead.'
          required: true
          type: string
        - name: reviewId
          in: path
          description: 'The id of the error review that needs to be updated.'
          required: true
          type: integer
          format: int64
        - name: errorLevelId
          in: formData
          description: 'Id of the error type.'
          required: false
          type: integer
          format: int64
        - name: severity
          in: formData
          description: 'The severity of the error.'
          required: false
          type: string
          enum: 
          - critical
          - major
          - minor
          - neutral
        - name: kudos
          in: formData
          description: 'Indicates whether reviewed segment earned kudos.'
          type: boolean
          default: false
        - name: comment
          in: formData
          description: 'Written comment on the reviewed error.'
          required: false
          type: string 
        - name: time
          in: formData
          description: 'The review time in milliseconds.'
          required: false
          type: integer
          format: int64
        - name: characterPosStart
          in: formData
          description: 'Character position where the error substring starts.'
          required: false
          type: integer
          format: int64
        - name: characterPosEnd
          in: formData
          description: 'Character position where the error substring ends.'
          required: false
          type: integer
          format: int64
        - name: editedText
          in: formData
          description: 'Segment target text edited during error review.'
          required: false
          type: string 
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /user:
    post:
      tags:
        - User
      summary: Create a user
      description: 'Users can submit their name and email to register for a free TAUS account.'
      operationId: createUser
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - in: formData
          name: name
          description: 'The name of the user'
          required: false
          type: string
        - in: formData
          name: email
          description: 'The email of the user'
          required: true
          type: string
          format: email
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
      security:
        - API_KEY: []          
    get:
      tags:
        - User
      summary: Users - Retrieve own information
      description: 'The Users will be able to retrieve their own id, name and email'
      operationId: getUserInfo
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
      responses:
        '200':
          description: 'Successful operation. Returns the User information.'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []          
  /user/{projectId}/:
    get:
      tags:
        - Project
        - User
      summary: Find the users of a project
      description: 'The project manager will be able to get all the users names and email that worked on a project.'
      operationId: getProjectUsers
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
        - name: projectKey
          in: header
          description: 'The child project key.'
          required: true
          type: string
        - name: projectId
          in: path
          description: 'ID of project that needs to be fetched. The catToolProjectIdentifier can be passed instead.'
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
        - PROJECT_KEY: []
  /user/errorLevel/:
    get:
      tags:
        - Project
        - User
        - Error Review
      summary: Return the selection of error typologies
      description: 'Return selection of error typologies to CAT Tool to display on UI'
      operationId: getUserSelectedErrorTypologies
      produces:
        - application/json
      parameters:
        - name: sessionId
          in: header
          description: 'The session id retrieved after a successful login using the (POST /login) method.'
          required: true
          type: string      
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string      
      responses:
        '200':
          description: 'Successful operation'
        '400':
          description: 'Wrong parameters'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Access is not permitted'
        '405':
          description: 'Method Not Allowed or missing parameters'
        '408':
          description: 'Time out'          
      security:
        - SESSION_ID: []
        - API_KEY: []
  /mtEngine/:
    get:
      tags:
        - Attributes
        - MT engine
      summary: Get the MT engines available.
      description: 'Get a list of the MT Engines currently existing in the DQF database. Please contact us if your MT engine is not available.'
      operationId: getmtEngines
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string
      responses:
        '200':
          description: 'Successful operation - Returns the ID and the names of the MT engines.'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []          
  /qualityLevel/:
    get:
      tags:
        - Attributes
        - Quality Level
      summary: Get the translation quality levels for the project set up.
      description: 'Get a list of the available quality levels in the DQF database.'
      operationId: getQualityLevel
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string        
      responses:
        '200':
          description: 'Successful operation - Returns the IDs and the names of the quality levels.'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []           
  /process/:
    get:
      tags:
        - Attributes
        - Process
      summary: Get the Productivity processes for the project set up.
      description: 'Get a list of the productivity processes currently available in the DQF database.'
      operationId: getProcess
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string        
      responses:
        '200':
          description: 'Successful operation - Returns the IDs, the names and the availability of the processes(api_supported) through the API.'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []           
  /contentType/:
    get:
      tags:
        - Content Type
      summary: Get the content types for the project set up.
      description: 'Get a list of the content types currently available in the DQF database.'
      operationId: contentType
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string        
      responses:
        '200':
          description: 'Successful operation - Returns the IDs and the names of the content types.'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []           
  /industry/:
    get:
      tags:
        - Attributes
        - Industry
      summary: Get the industries list for the project set up.
      description: 'Get a list of the industries currently available in the DQF database.'
      operationId: getIndustry
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string        
      responses:
        '200':
          description: 'Successful operation - Returns the IDs and the names of the industries.'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []           
  /language/:
    get:
      tags:
        - Attributes
        - Language
      summary: Get a language list for the project set up.
      description: 'Get a list of the supported languages currently available in the DQF database.'
      operationId: getLanguage
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string        
      responses:
        '200':
          description: 'Successful operation - Returns a list of DQF language identifiers (ISO 639 2-letter-language identifier"-"ISO 3166 two-letter country identifier).'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []           
  /errorLevel/:
    get:
      tags:
        - Attributes
        - Error Review
      summary: Get list of top level errors in error hierarchy.
      description: 'Get a list of list of top level  and their sub-level errors in error hierarchy currently available in the DQF database.'
      operationId: getErrorLevel
      produces:
        - application/json
      parameters:
        - name: apiKey
          in: header
          description: 'The API key of the integrator'
          required: true
          type: string        
      responses:
        '200':
          description: 'Successful operation - Returns the IDs and the descriptions of the top level and their sub-level errors.'
        '400':
          description: 'Bad request'
      security:
        - API_KEY: []
securityDefinitions:
  SESSION_ID:
    type: basic
    description: 'The user management service authenticates and authorizes users to add, retrieve and update data.'
  API_KEY:
    type: apiKey
    name: apiKey
    in: header
    description: 'The API Key given to the integrators'
  PROJECT_KEY:
    type: apiKey
    name: projectKey
    in: header
    description: 'The Project key will be returned every time a new project is submitted with the API. This key will allow the creation of subprojects and will authorize users to access the data of the project.'